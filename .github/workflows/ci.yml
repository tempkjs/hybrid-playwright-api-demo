name: Run Playwright Packs

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Test Environment"
        required: true
        default: "qa"
        type: choice
        options:
          - dev
          - qa
          - stage

  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ENV: ${{ github.event.inputs.environment }}

  BASE_URL_UI: ${{ secrets[format('{0}_BASE_URL_UI', github.event.inputs.environment)] }}
  BASE_URL_API: ${{ secrets[format('{0}_BASE_URL_API', github.event.inputs.environment)] }}

  USER_EMAIL: ${{ secrets[format('{0}_USER_EMAIL', github.event.inputs.environment)] }}
  USER_PASSWORD: ${{ secrets[format('{0}_USER_PASSWORD', github.event.inputs.environment)] }}

jobs:
  test-packs:
    strategy:
      matrix:
        pack: [api, ui]

    name: Run Playwright Packs (${{ matrix.pack }} on ${{ github.event.inputs.environment }})
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-pw-

      - name: Install deps
        run: npm ci

      - name: Install browser dependencies
        run: npx playwright install-deps

      - name: Run tagged tests
        run: |
          echo "Running ${{ matrix.pack }} pack on ${{ env.ENV }} env"
          npx playwright test --grep "@${{ matrix.pack }}"

      - name: Upload report artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pack }}-report
          path: playwright-report
