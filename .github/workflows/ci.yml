name: Hybrid Playwright API CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Playwright + API Tests
    runs-on: ubuntu-latest

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: üß∞ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üé≠ Install Playwright Browsers
        run: npx playwright install --with-deps
      
      - name: üì¶ Install Allure CLI
        run: npm install --save-dev allure-playwright allure-commandline


      - name: ‚öôÔ∏è Run Playwright + Axios tests (HTML + Allure)
        env:
          BASE_URL_UI: https://demoqa.com
          BASE_URL_API: https://jsonplaceholder.typicode.com
        run: |
          npx playwright test --reporter=html,line,allure-playwright

        # ‚úÖ Upload reports as artifacts (optional backup)
      - name: üì¶ Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: warn

      - name: üì¶ Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          if-no-files-found: warn

        # ‚úÖ Generate Allure report
      - name: üß© Generate Allure HTML
        if: always()
        run: |
         echo "Generating Allure report..."
         if [ -d "allure-results" ]; then
         npx allure generate allure-results --clean -o allure-report
         echo "‚úÖ Allure report generated at allure-report/"
         else
         echo "‚ö†Ô∏è No allure-results folder found, skipping"
         fi

      - name: üóÇÔ∏è Prepare reports (with timestamped archive)
        if: always()
        run: |
         rm -rf reports
         mkdir -p reports/latest
         mkdir -p reports/allure

   
         TS=$(date -u +"%Y-%m-%dT%H%MZ")
         ARCHIVE_DIR="reports/archive/$TS"
         mkdir -p "$ARCHIVE_DIR/playwright"
         mkdir -p "$ARCHIVE_DIR/allure"

         echo "Timestamp for this run: $TS"

         if [ -d "playwright-report" ]; then
          echo "Copying Playwright report..."
         cp -r playwright-report/* reports/latest/
         cp -r playwright-report/* "$ARCHIVE_DIR/playwright/"
         else
          echo "‚ö†Ô∏è No playwright-report found."
         fi

         if [ -d "allure-report" ]; then
          echo "Copying Allure report..."
         cp -r allure-report/* reports/allure/
         cp -r allure-report/* "$ARCHIVE_DIR/allure/"
         else
          echo "‚ö†Ô∏è No allure-report found."
         fi

         echo "‚úÖ Reports prepared and archived under $ARCHIVE_DIR"


        # ‚úÖ Publish both reports to GitHub Pages
      - name: üåê Publish to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: reports
          keep_files: true
          force_orphan: false
